{"body": "<p>The Produce &amp; Publish Server provides the conversion functionality to all\ncomponents of the Produce &amp; Publish platform. The server is implemented on top of the\nPyramid webframework (<a class=\"reference external\" href=\"http://docs.pylonsproject.org/projects/pyramid/dev/\">http://docs.pylonsproject.org/projects/pyramid/dev/</a>). The server\nprovides a simple XML-RPC API over standard HTTP protocol.</p>\n<div class=\"section\" id=\"requirements\">\n<h1>Requirements<a class=\"headerlink\" href=\"#requirements\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<ul class=\"simple\">\n<li>Python 2.6 or 2.7 (no Python 3 support)</li>\n</ul>\n</div>\n<div class=\"section\" id=\"installation\">\n<h1>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<ul>\n<li><p class=\"first\">create an <tt class=\"docutils literal\"><span class=\"pre\">virtualenv</span></tt> environment (Python 2.6) - either within your\ncurrent (empty) directory or by letting virtualenv create one for you.\n(<tt class=\"docutils literal\"><span class=\"pre\">easy_install</span> <span class=\"pre\">virtualenv</span></tt> if <tt class=\"docutils literal\"><span class=\"pre\">virtualenv</span></tt> is not available on your system):</p>\n<div class=\"highlight-python\"><pre>virtualenv --no-site-packages .</pre>\n</div>\n<p>or:</p>\n<div class=\"highlight-python\"><pre>virtualenv --no-site-packages smartprintng</pre>\n</div>\n</li>\n<li><p class=\"first\">install the SmartPrintNG server:</p>\n<div class=\"highlight-python\"><pre>bin/easy_install zopyx.smartprintng.server</pre>\n</div>\n</li>\n<li><p class=\"first\">create a <tt class=\"docutils literal\"><span class=\"pre\">server.ini</span></tt> configuration file (and change it according to your needs):</p>\n<div class=\"highlight-python\"><pre>[DEFAULT]\ndebug = true\n\n[app:main]\nuse = egg:zopyx.smartprintng.server#app\nreload_templates = true\ndebug_authorization = false\ndebug_notfound = false\n\n[server:main]\nuse = egg:Paste#http\nhost = 127.0.0.1\nport = 6543</pre>\n</div>\n</li>\n<li><p class=\"first\">start the server (in foreground):</p>\n<div class=\"highlight-python\"><pre>bin/paster serve server.ini</pre>\n</div>\n</li>\n<li><p class=\"first\">or start it in background:</p>\n<div class=\"highlight-python\"><pre>bin/paster serve server.ini  --daemon</pre>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"upgrading\">\n<h1>Upgrading<a class=\"headerlink\" href=\"#upgrading\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>For upgrading an existing SmartPrintNG server you should try the following inside\nyour virtualenv environment:</p>\n<div class=\"highlight-python\"><pre>bin/easy_install -U zopyx.smartprintng.server\nbin/easy_install -U zopyx.convert2</pre>\n</div>\n</div>\n<div class=\"section\" id=\"xmlrpc-api\">\n<h1>XMLRPC API<a class=\"headerlink\" href=\"#xmlrpc-api\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The SmartPrintNG server exposes several methods through XMLRPC:</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"nf\">convertZIP</span><span class=\"p\">(</span><span class=\"n\">auth_token</span><span class=\"p\">,</span> <span class=\"n\">zip_archive</span><span class=\"p\">,</span> <span class=\"n\">converter_name</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; &#39;zip_archive&#39; is ZIP archive (encoded as base-64 byte string).</span>\n<span class=\"sd\">        The archive must contain exactly *one* HTML file to be converted</span>\n<span class=\"sd\">        including all related resources like stylesheets and images.</span>\n<span class=\"sd\">        All files must be stored flat within the archive (no subfolders).</span>\n<span class=\"sd\">        All references to externals resources like the &#39;src&#39; attribute</span>\n<span class=\"sd\">        of the IMG tag or references to the stylesheet(s) must use</span>\n<span class=\"sd\">        relative paths. The method returns the converted output file</span>\n<span class=\"sd\">        also as base64-encoded ZIP archive.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">convertZIPEmail</span><span class=\"p\">(</span><span class=\"n\">auth_token</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">zip_archive</span><span class=\"p\">,</span> <span class=\"n\">converter_name</span><span class=\"o\">=</span><span class=\"s\">&#39;pdf-prince&#39;</span><span class=\"p\">,</span>\n                    <span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">recipient</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Similar to convertZIP() except that this method will send the</span>\n<span class=\"sd\">        converted output document to a recipient by email. &#39;subject&#39; and</span>\n<span class=\"sd\">        &#39;body&#39; parameters *must* be utf-8 encoded.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">availableConverters</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot; Returns a list of available converter names on the</span>\n<span class=\"sd\">        SmartPrintNG backend.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Log into the server. Returns an auth_token. authenticate()</span>\n<span class=\"sd\">        must be called before calling any of the methods above.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot; says &#39;pong&#39; - or something similar &quot;&quot;&quot;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"email-configuration\">\n<h1>Email configuration<a class=\"headerlink\" href=\"#email-configuration\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>For using the email support through the <tt class=\"docutils literal\"><span class=\"pre\">convertZIPEmail()</span></tt> the email server must be\nconfigured through a dedicated configuration file. An <tt class=\"docutils literal\"><span class=\"pre\">email.ini</span></tt> may look like this:</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"p\">[</span><span class=\"n\">mail</span><span class=\"p\">]</span>\n<span class=\"n\">hostname</span> <span class=\"o\">=</span> <span class=\"n\">smtp</span><span class=\"o\">.</span><span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">com</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">some_username</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">some_password</span>\n<span class=\"n\">force_tls</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n<span class=\"n\">no_tls</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n</pre></div>\n</div>\n<p>You have to pass the name of the email configuration file to <tt class=\"docutils literal\"><span class=\"pre\">paster</span></tt> when starting\nthen server:</p>\n<div class=\"highlight-python\"><pre>bin/paster serve server.ini mail_config=/path/to/email.ini</pre>\n</div>\n</div>\n", "display_toc": true, "title": "Requirements", "sourcename": "server/installation.txt", "customsidebar": null, "current_page_name": "server/installation", "next": {"link": "../../connector/installation/", "title": "Installation"}, "rellinks": [["genindex", "General Index", "I", "index"], ["connector/installation", "Installation", "N", "next"], ["release-notes/zopyx.authoring-docs/HISTORY", "Changelog", "P", "previous"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Requirements</a></li>\n<li><a class=\"reference internal\" href=\"#installation\">Installation</a></li>\n<li><a class=\"reference internal\" href=\"#upgrading\">Upgrading</a></li>\n<li><a class=\"reference internal\" href=\"#xmlrpc-api\">XMLRPC API</a></li>\n<li><a class=\"reference internal\" href=\"#email-configuration\">Email configuration</a></li>\n</ul>\n", "prev": {"link": "../../release-notes/zopyx.authoring-docs/HISTORY/", "title": "Changelog"}, "metatags": ""}